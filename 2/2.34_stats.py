"""
Пример байесовского подхода с использованием условных вероятностей.
"""

import numpy as np

# Генерация случайных данных
# Допустим, у нас есть два бинарных признака: X1 и Х2, и мы хотим предсказать целевую переменную Y
# Вектор X1
X1 = np.array([0, 1, 0, 1, 0, 1, 0, 1, 1, 0])
# Вектор Х2
X2 = np.array([0, 0, 1, 1, 0, 0, 1, 1, 0, 1])
# Вектор целевой переменной Y
Y = np.array([0, 0, 1, 1, 0, 1, 0, 1, 1, 0])

# Подсчёт условных вероятностей P(Y|X1, Х2)
# Для этого мы считаем количество совпадений для каждой комбинации значений X1, Х2 и Y
# Затем делим количество совпадений на общее количество случаев для каждой комбинации X1, Х2
def conditional_probabilities(X1, Х2, Y):
    conditional_probs = {}
    for i in range(2):  # Цикл по значениям X1 (0 или 1)
        for j in range(2):  # Цикл по значениям Х2 (0 или 1)
            for k in range(2):  # Цикл по значениям Y (0 или 1)
                # Считаем количество случаев, когда X1=x1, Х2=х2 и Y=y
                count = np.sum((X1 == i) & (Х2 == j) & (Y == k))
                # Считаем общее количество случаев, когда X1=x1 и Х2=х2
                total = np.sum((X1 == i) & (Х2 == j))
                # Вычисляем условную вероятность P(Y=k|X1=i, X2=j)
                conditional_probs[(i, j, k)] = count / total
    return conditional_probs

# Вывод условных вероятностей
conditional_probs = conditional_probabilities(X1, X2, Y)
for key, value in conditional_probs.items():
    print(f"P(Y={key[2]}|X1={key[0]}, X2={key[1]}) = {value:.2f}")
